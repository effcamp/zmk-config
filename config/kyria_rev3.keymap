/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&kp TAB              &kp Q  &kp W  &kp E     &kp R           &kp T                                                             &kp Y         &kp U     &kp I      &kp O    &kp P     &kp MINUS
&mt LEFT_ALT ESCAPE  &kp A  &kp S  &kp D     &kp F           &kp G                                                             &kp H         &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL     &kp Z  &kp X  &kp C     &kp V           &kp B      &none       &none        &none            &none        &kp N         &kp M     &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_SHIFT ENTER
                                   &kp LGUI  &kp LEFT_ARROW  &kp RIGHT  &kp LSHIFT  &lt 2 SPACE  &lt 3 BACKSPACE  &lt 2 SPACE  &kp UP_ARROW  &kp DOWN  &kp LCMD
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        gaming_layer {
            bindings = <
&kp TAB   &kp T      &kp Q  &kp W      &kp E       &kp R                                                      &kp Y  &kp U     &kp I      &kp O    &kp P     &kp MINUS
&kp ESC   &kp LSHFT  &kp A  &kp S      &kp D       &kp F                                                      &kp H  &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LALT  &kp LCTRL  &kp Z  &kp X      &kp C       &kp V      &kp G      &kp B  &none            &none        &kp N  &kp M     &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_SHIFT ENTER
                            &kp ENTER  &kp ESCAPE  &kp LSHFT  &kp SPACE  &mo 2  &lt 3 BACKSPACE  &lt 2 SPACE  &mo 2  &kp BSPC  &kp LCMD
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;

            label = "Game";
        };

        num_nav {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&kp TAB           &kp GRAVE  &kp BSLH  &kp LBKT  &kp RBKT  &kp EQUAL                                      &kp C_VOL_UP  &kp HOME     &kp UP         &kp END     &none   &kp BSPC
&kp LEFT_ALT      &kp N1     &kp N2    &kp N3    &kp N4    &kp N5                                         &kp C_VOL_DN  &kp LEFT     &kp DOWN       &kp RIGHT   &none   &kp DEL
&kp LEFT_CONTROL  &kp N6     &kp N7    &kp N8    &kp N9    &kp N0     &trans      &trans  &trans  &trans  &kp C_MUTE    &kp PAGE_UP  &kp PAGE_DOWN  &kp C_PLAY  &trans  &kp ENTER
                                       &trans    &trans    &trans     &kp LSHIFT  &trans  &trans  &trans  &trans        &trans       &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
            label = "NumNav";
        };

        function_layer {
            bindings = <
&trans  &kp F1           &kp F2  &kp F3    &kp F4   &kp F5                                              &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &tog 1  &none
&trans  &kp F6           &kp F7  &kp F8    &kp F9   &kp F10                                             &none         &none         &none         &none         &none   &none
&trans  &kp PRINTSCREEN  &none   &none     &kp F11  &kp F12  &none           &none  &none   &bt BT_CLR  &none         &none         &none         &none         &none   &trans
                                 &kp LGUI  &none    &none    &kp LEFT_SHIFT  &none  &trans  &kp SPACE   &none         &none         &none
            >;

            label = "Func";
        };

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "Mouse";
        };
    };
};
